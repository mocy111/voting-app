{"version":3,"sources":["images/houssein.jpg","images/az.jpg","images/youss.jpg","images/imran.jpg","list.js","child.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","List","id","name","votes","imageUrl","require","Child","console","log","this","props","className","src","imgUrl","alt","class","onClick","votePlayer","bind","Component","App","state","player","addOne","playerId","map","param","Object","assign","setState","trier","sort","a","b","Fragment","Paper","elevation","key","liste","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,qIC+B5BC,EA/BF,CAEP,CACEC,GAAI,EACJC,KAAM,gBACNC,MAAO,GACNC,SAAUC,EAAQ,KAGrB,CACEJ,GAAI,EACJC,KAAM,UACNC,MAAO,GACPC,SAAUC,EAAQ,KAGpB,CACEJ,GAAI,EACJC,KAAM,sBACNC,MAAO,GACPC,SAAUC,EAAQ,KAGpB,CACEJ,GAAI,EACJC,KAAM,eACNC,MAAO,GACPC,SAAUC,EAAQ,M,QCsBXC,G,MA/Cf,uKAMQ,OADAC,QAAQC,IAAIC,KAAKC,OAEb,yBAAKC,UAAU,UAGvB,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,QACP,yBAAMA,UAAU,WACZ,yBAAMC,IAAKH,KAAKC,MAAMG,OAAQC,IAAKL,KAAKC,MAAMR,QAG1D,yBAAKS,UAAU,2BACV,uBAAGA,UAAU,UAAUF,KAAKC,MAAMR,KAAlC,IAAwC,uBAAGa,MAAM,cAAjD,KACA,yBAAKA,MAAM,QACJ,0BAAMA,MAAM,UAAZ,IAAsB,uBAAGJ,UAAU,cAG3C,yBAAKI,MAAM,SACP,yBAAKA,MAAM,YAAX,SACA,yBAAKA,MAAM,gBAIf,yBAAKA,MAAM,6BAA8BC,QAASP,KAAKC,MAAMO,WAAWC,KAAKT,KAAKA,KAAKC,MAAMT,KACzF,uBAAGc,MAAM,yBACJN,KAAKC,MAAMP,eA9BhC,GAA2BgB,cCsFZC,E,4MA/EXC,MAAO,CACLC,OAAQ,I,EAUVC,OAAS,SAACC,GACR,IAAMP,EAAa,EAAKI,MAAMC,OAAOG,KAAI,SAACC,GACtC,OAAIF,IAAaE,EAAMzB,GACd0B,OAAOC,OAAO,GAAGF,EAAO,CAC7BvB,MAAMuB,EAAMvB,MAAO,IAMduB,KAGb,EAAKG,SAAS,CACZP,OAAOL,K,kEAnBTR,KAAKoB,SAAS,CACZP,OAAOtB,M,+BAyBH,IAAD,OACPO,QAAQC,IAAIC,KAAKY,MAAMC,QAC3B,IAAMQ,EAAQrB,KAAKY,MAAMC,OAAOS,MAAK,SAACC,EAAEC,GAAH,OACjCA,EAAE9B,MAAQ6B,EAAE7B,SAIZ,OACE,kBAAC,IAAM+B,SAAP,KAKN,yBAAKvB,UAAU,wBAGLmB,EAAML,KAAI,SAACC,GACT,OACE,kBAACS,EAAA,EAAD,CAAOC,UAAW,GAClB,yBAAKC,IAAKX,EAAMzB,IAEf,kBAAC,EAAD,CACAA,GAAKyB,EAAMzB,GACXC,KAAQwB,EAAMxB,KACdC,MAAOuB,EAAMvB,MACbmC,MAAQ,EAAKjB,MACbR,OAASa,EAAMtB,SACfa,WAAa,EAAKM,oB,GA7DfJ,aCKEoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjD,QAAQiD,MAAMA,EAAMC,c","file":"static/js/main.6530ac28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/houssein.ad8b1fef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/az.1630c2a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/youss.829a4d37.jpg\";","module.exports = __webpack_public_path__ + \"static/media/imran.0e8e07d5.jpg\";","const List = [\n    \n      {\n        id: 2,\n        name: \"Houssein Abil\",\n        votes: 18,\n         imageUrl: require(\"./images/houssein.jpg\"),\n        // clubUrl: require(\"./images/juv.png\")\n      },\n      {\n        id: 3,\n        name: \"Az Taro\",\n        votes: 12,\n        imageUrl: require(\"./images/az.jpg\"),\n        // clubUrl: require(\"./images/psg.png\")\n      },\n      {\n        id: 4,\n        name: \"Youssouf dan Tahoua\",\n        votes: 15,\n        imageUrl: require(\"./images/youss.jpg\"),\n        // clubUrl: require(\"./images/psg.png\")\n      },\n      {\n        id: 5,\n        name: \"Tonton Imran\",\n        votes: 10,\n        imageUrl: require(\"./images/imran.jpg\"),\n        // clubUrl: require(\"./images/chelsea.jpeg\")\n      }\n]\nexport default List","import React, { Component } from 'react'\n\nexport class Child extends Component {\n\n\n\n    render() {\n        console.log(this.props);\n        return (\n            <div className=\"milieu\">\n            \n            \n    <div className=\"ui divided  items \" >\n        <div className=\"item\">\n                < div className=\"  image\" >\n                    <img  src={this.props.imgUrl} alt={this.props.name}/>\n                </div>\n\n        <div className=\" middle aligned content\" >\n             <p className=\"header\">{this.props.name} <i class=\"like icon\"></i> </p> \n             <div class=\"meta\">\n                    <span class=\"cinema\"> <i className=\"ne flag\"></i></span>\n            </div>\n\n            <div class=\"extra\">\n                <div class=\"ui label\">#VOTE</div>\n                <div class=\"ui divider\"></div>\n            </div>\n    \n\n            <div class=\"ui  floated primary button\"  onClick={this.props.votePlayer.bind(this,this.props.id)} >\n                <i class=\" large up caret icon\" ></i>\n                    {this.props.votes} \n            </div>\n            \n                           \n        </div>   \n              \n\n              </div>\n\n\n              \n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Child\n\n","import React , { Component } from 'react';\nimport List from './list'\nimport {Paper } from '@material-ui/core'\n\nimport './App.css';\nimport Child from './child';\n\nclass App extends Component {\n\n    state ={\n      player: []\n       \n    }\n\n    componentDidMount() {\n      this.setState({\n        player:List\n      })\n     \n    }\n    addOne = (playerId) =>{\n      const votePlayer = this.state.player.map((param)=>{\n          if (playerId === param.id){\n            return Object.assign({},param, {\n              votes:param.votes +1\n            })\n           \n\n          }\n          else {\n            return param\n          }\n      })\n      this.setState({\n        player:votePlayer\n      })\n    }\n\n    \n    \n\n  render() {\n    console.log(this.state.player);\nconst trier = this.state.player.sort((a,b)=>\n    b.votes - a.votes\n)\n      \n\n    return (\n      <React.Fragment>\n        \n        \n     \n       \n<div className=\"ui unstackable items\"> \n      \n      {\n          trier.map((param) =>{\n            return (\n              <Paper elevation={3} >\n              <div key={param.id}>\n                \n               <Child \n               id ={param.id}\n               name = {param.name} \n               votes={param.votes}\n               liste ={this.state}\n               imgUrl ={param.imageUrl}\n               votePlayer= {this.addOne}\n               \n               />\n              </div>\n              </Paper>\n            )\n            \n\n          })\n      }\n           \n       </div>\n       \n     \n      </React.Fragment>\n      \n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}